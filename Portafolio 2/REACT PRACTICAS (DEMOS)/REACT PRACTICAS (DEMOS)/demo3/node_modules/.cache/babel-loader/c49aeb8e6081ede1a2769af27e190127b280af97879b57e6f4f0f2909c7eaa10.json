{"ast":null,"code":"var _jsxFileName = \"/home/vboxuser/Desktop/REACT PRACTICAS (DEMOS)/demo3/src/components/tabla.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\n\n// Componente funcional que renderiza una tabla de razas de perros\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MiDataTable = () => {\n  _s();\n  // Estado para almacenar las razas de perros\n  const [dogs, setDogs] = useState([]);\n\n  // Funci贸n para obtener datos de la API de razas de perros\n  const fetchData = async () => {\n    try {\n      // Realiza una solicitud a la API de razas de perros\n      const response = await fetch('https://dog.ceo/api/breeds/list/all');\n      // Convierte la respuesta en formato JSON\n      const data = await response.json();\n      // Extrae las razas de perros de los datos recibidos\n      const dogBreeds = Object.keys(data.message);\n      // Actualiza el estado con las razas de perros\n      setDogs(dogBreeds);\n    } catch (error) {\n      // Maneja cualquier error ocurrido durante la solicitud\n      console.error('Error fetching dog breeds:', error);\n    }\n  };\n\n  // Efecto que se ejecuta una vez al montar el componente para obtener datos\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Define las columnas de la tabla\n  const columns = [{\n    name: 'Breed',\n    // Nombre de la columna\n    selector: row => row // Selector para obtener el valor de la celda\n  }];\n\n  // Retorna la tabla de datos utilizando el componente DataTable\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    columns: columns // Propiedad para pasar las columnas\n    ,\n    data: dogs // Propiedad para pasar los datos de las razas de perros\n    ,\n    pagination: true // Habilita la paginaci贸n\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MiDataTable, \"pSBGSKa0uqsDjyjGPBMjPOVWgI8=\");\n_c = MiDataTable;\nexport default MiDataTable; // Exporta el componente MiDataTable\nvar _c;\n$RefreshReg$(_c, \"MiDataTable\");","map":{"version":3,"names":["React","useState","useEffect","DataTable","jsxDEV","_jsxDEV","MiDataTable","_s","dogs","setDogs","fetchData","response","fetch","data","json","dogBreeds","Object","keys","message","error","console","columns","name","selector","row","pagination","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vboxuser/Desktop/REACT PRACTICAS (DEMOS)/demo3/src/components/tabla.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\n\n// Componente funcional que renderiza una tabla de razas de perros\nconst MiDataTable = () => {\n  // Estado para almacenar las razas de perros\n  const [dogs, setDogs] = useState([]); \n\n  // Funci贸n para obtener datos de la API de razas de perros\n  const fetchData = async () => {\n    try {\n      // Realiza una solicitud a la API de razas de perros\n      const response = await fetch('https://dog.ceo/api/breeds/list/all');\n      // Convierte la respuesta en formato JSON\n      const data = await response.json();\n      // Extrae las razas de perros de los datos recibidos\n      const dogBreeds = Object.keys(data.message); \n      // Actualiza el estado con las razas de perros\n      setDogs(dogBreeds);\n    } catch (error) {\n      // Maneja cualquier error ocurrido durante la solicitud\n      console.error('Error fetching dog breeds:', error);\n    }\n  };\n\n  // Efecto que se ejecuta una vez al montar el componente para obtener datos\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  // Define las columnas de la tabla\n  const columns = [\n    {\n      name: 'Breed', // Nombre de la columna\n      selector: (row) => row, // Selector para obtener el valor de la celda\n    },\n  ];\n\n  // Retorna la tabla de datos utilizando el componente DataTable\n  return (\n    <DataTable\n      columns={columns} // Propiedad para pasar las columnas\n      data={dogs} // Propiedad para pasar los datos de las razas de perros\n      pagination // Habilita la paginaci贸n\n    />\n  );\n};\n\nexport default MiDataTable; // Exporta el componente MiDataTable"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,4BAA4B;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACA,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;MACnE;MACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC;MACA,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAACK,OAAO,CAAC;MAC3C;MACAT,OAAO,CAACM,SAAS,CAAC;IACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;MACAC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;;EAED;EACAjB,SAAS,CAAC,MAAM;IACdQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMW,OAAO,GAAG,CACd;IACEC,IAAI,EAAE,OAAO;IAAE;IACfC,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAAE;EAC1B,CAAC,CACF;;EAED;EACA,oBACEnB,OAAA,CAACF,SAAS;IACRkB,OAAO,EAAEA,OAAQ,CAAC;IAAA;IAClBR,IAAI,EAAEL,IAAK,CAAC;IAAA;IACZiB,UAAU,OAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEN,CAAC;AAACtB,EAAA,CA1CID,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA4CjB,eAAeA,WAAW,CAAC,CAAC;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}