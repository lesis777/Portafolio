{"ast":null,"code":"var _jsxFileName = \"/home/vboxuser/Desktop/REACT/demo3/src/components/tabla.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MiDataTable = () => {\n  _s();\n  const [dogs, setDogs] = useState([]); // Use a more descriptive state name\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('https://dog.ceo/api/breeds/list/all');\n      const data = await response.json();\n      const dogBreeds = Object.keys(data.message); // Extract dog breeds from response\n      setDogs(dogBreeds);\n    } catch (error) {\n      console.error('Error fetching dog breeds:', error);\n      // Handle errors gracefully, e.g., display an error message to the user\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const columns = [{\n    name: 'Breed',\n    selector: row => row // Access the entire breed name directly\n  }];\n  return /*#__PURE__*/_jsxDEV(DataTable, {\n    columns: columns,\n    data: dogs,\n    pagination: true\n    // Add other desired DataTable options, e.g., sorting, filtering\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MiDataTable, \"pSBGSKa0uqsDjyjGPBMjPOVWgI8=\");\n_c = MiDataTable;\nexport default MiDataTable;\nvar _c;\n$RefreshReg$(_c, \"MiDataTable\");","map":{"version":3,"names":["React","useState","useEffect","DataTable","jsxDEV","_jsxDEV","MiDataTable","_s","dogs","setDogs","fetchData","response","fetch","data","json","dogBreeds","Object","keys","message","error","console","columns","name","selector","row","pagination","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/vboxuser/Desktop/REACT/demo3/src/components/tabla.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\n\nconst MiDataTable = () => {\n  const [dogs, setDogs] = useState([]); // Use a more descriptive state name\n\n  const fetchData = async () => {\n    try {\n      const response = await fetch('https://dog.ceo/api/breeds/list/all');\n      const data = await response.json();\n      const dogBreeds = Object.keys(data.message); // Extract dog breeds from response\n      setDogs(dogBreeds);\n    } catch (error) {\n      console.error('Error fetching dog breeds:', error);\n      // Handle errors gracefully, e.g., display an error message to the user\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const columns = [\n    {\n      name: 'Breed',\n      selector: (row) => row, // Access the entire breed name directly\n    },\n  ];\n\n  return (\n    <DataTable\n      columns={columns}\n      data={dogs}\n      pagination\n      // Add other desired DataTable options, e.g., sorting, filtering\n    />\n  );\n};\n\nexport default MiDataTable;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtC,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;MACnE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAACK,OAAO,CAAC,CAAC,CAAC;MAC7CT,OAAO,CAACM,SAAS,CAAC;IACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD;IACF;EACF,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACdQ,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,OAAO,GAAG,CACd;IACEC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAGC,GAAG,IAAKA,GAAG,CAAE;EAC1B,CAAC,CACF;EAED,oBACEnB,OAAA,CAACF,SAAS;IACRkB,OAAO,EAAEA,OAAQ;IACjBR,IAAI,EAAEL,IAAK;IACXiB,UAAU;IACV;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEN,CAAC;AAACtB,EAAA,CAlCID,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAoCjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}