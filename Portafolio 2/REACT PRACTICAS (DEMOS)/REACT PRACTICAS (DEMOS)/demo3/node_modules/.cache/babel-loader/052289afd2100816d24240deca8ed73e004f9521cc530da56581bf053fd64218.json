{"ast":null,"code":"var _jsxFileName = \"/home/vboxuser/Desktop/REACT/demo3/src/components/Datatables.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Datatables() {\n  _s();\n  const [pokemonData, setPokemonData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    fetch('https://pokeapi.co/api/v2/pokemon/ditto').then(response => response.json()).then(data => {\n      setPokemonData([{\n        id: data.id,\n        name: data.name,\n        height: data.height,\n        weight: data.weight,\n        abilities: data.abilities.map(ability => ability.ability.name).join(', '),\n        types: data.types.map(type => type.type.name).join(', ')\n      }]);\n      setIsLoading(false);\n    }).catch(error => {\n      console.error('Error fetching data:', error);\n      setIsLoading(false);\n    });\n  }, []);\n  const columns = [{\n    name: 'ID',\n    selector: 'id'\n  }, {\n    name: 'Name',\n    selector: 'name'\n  }, {\n    name: 'Height',\n    selector: 'height'\n  }, {\n    name: 'Weight',\n    selector: 'weight'\n  }, {\n    name: 'Abilities',\n    selector: 'abilities'\n  }, {\n    name: 'Types',\n    selector: 'types'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(DataTable, {\n      title: \"Ditto Pokemon Data\",\n      columns: columns,\n      data: pokemonData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Datatables, \"pXk2kfYmJjlIjaiwTws2Fj3aJUg=\");\n_c = Datatables;\nexport default Datatables;\nvar _c;\n$RefreshReg$(_c, \"Datatables\");","map":{"version":3,"names":["React","useState","useEffect","DataTable","jsxDEV","_jsxDEV","Datatables","_s","pokemonData","setPokemonData","isLoading","setIsLoading","fetch","then","response","json","data","id","name","height","weight","abilities","map","ability","join","types","type","catch","error","console","columns","selector","children","fileName","_jsxFileName","lineNumber","columnNumber","title","_c","$RefreshReg$"],"sources":["/home/vboxuser/Desktop/REACT/demo3/src/components/Datatables.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DataTable from 'react-data-table-component';\n\nfunction Datatables() {\n  const [pokemonData, setPokemonData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    fetch('https://pokeapi.co/api/v2/pokemon/ditto')\n      .then(response => response.json())\n      .then(data => {\n        setPokemonData([\n          {\n            id: data.id,\n            name: data.name,\n            height: data.height,\n            weight: data.weight,\n            abilities: data.abilities.map(ability => ability.ability.name).join(', '),\n            types: data.types.map(type => type.type.name).join(', ')\n          }\n        ]);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error('Error fetching data:', error);\n        setIsLoading(false);\n      });\n  }, []);\n\n  const columns = [\n    {\n      name: 'ID',\n      selector: 'id'\n    },\n    {\n      name: 'Name',\n      selector: 'name'\n    },\n    {\n      name: 'Height',\n      selector: 'height'\n    },\n    {\n      name: 'Weight',\n      selector: 'weight'\n    },\n    {\n      name: 'Abilities',\n      selector: 'abilities'\n    },\n    {\n      name: 'Types',\n      selector: 'types'\n    }\n  ];\n\n  return (\n    <div>\n      {isLoading ? (\n        <p>Loading...</p>\n      ) : (\n        <DataTable\n          title=\"Ditto Pokemon Data\"\n          columns={columns}\n          data={pokemonData}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Datatables;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACdU,KAAK,CAAC,yCAAyC,CAAC,CAC7CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZP,cAAc,CAAC,CACb;QACEQ,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,IAAI,EAAEF,IAAI,CAACE,IAAI;QACfC,MAAM,EAAEH,IAAI,CAACG,MAAM;QACnBC,MAAM,EAAEJ,IAAI,CAACI,MAAM;QACnBC,SAAS,EAAEL,IAAI,CAACK,SAAS,CAACC,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACA,OAAO,CAACL,IAAI,CAAC,CAACM,IAAI,CAAC,IAAI,CAAC;QACzEC,KAAK,EAAET,IAAI,CAACS,KAAK,CAACH,GAAG,CAACI,IAAI,IAAIA,IAAI,CAACA,IAAI,CAACR,IAAI,CAAC,CAACM,IAAI,CAAC,IAAI;MACzD,CAAC,CACF,CAAC;MACFb,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC,CACDgB,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CjB,YAAY,CAAC,KAAK,CAAC;IACrB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmB,OAAO,GAAG,CACd;IACEZ,IAAI,EAAE,IAAI;IACVa,QAAQ,EAAE;EACZ,CAAC,EACD;IACEb,IAAI,EAAE,MAAM;IACZa,QAAQ,EAAE;EACZ,CAAC,EACD;IACEb,IAAI,EAAE,QAAQ;IACda,QAAQ,EAAE;EACZ,CAAC,EACD;IACEb,IAAI,EAAE,QAAQ;IACda,QAAQ,EAAE;EACZ,CAAC,EACD;IACEb,IAAI,EAAE,WAAW;IACjBa,QAAQ,EAAE;EACZ,CAAC,EACD;IACEb,IAAI,EAAE,OAAO;IACba,QAAQ,EAAE;EACZ,CAAC,CACF;EAED,oBACE1B,OAAA;IAAA2B,QAAA,EACGtB,SAAS,gBACRL,OAAA;MAAA2B,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjB/B,OAAA,CAACF,SAAS;MACRkC,KAAK,EAAC,oBAAoB;MAC1BP,OAAO,EAAEA,OAAQ;MACjBd,IAAI,EAAER;IAAY;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EACF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC7B,EAAA,CAlEQD,UAAU;AAAAgC,EAAA,GAAVhC,UAAU;AAoEnB,eAAeA,UAAU;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}